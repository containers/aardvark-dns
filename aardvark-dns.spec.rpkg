# For automatic rebuilds in COPR

# The following tag is to get correct syntax highlighting for this file in vim text editor
# vim: syntax=spec

%global with_debug 0

%if 0%{?with_debug}
%global _find_debuginfo_dwz_opts %{nil}
%global _dwz_low_mem_die_limit 0
%else
%global debug_package %{nil}
%endif

# git_dir_name returns repository name derived from remote Git repository URL
Name:       {{{ git_dir_name }}}

Epoch: 101

# git_dir_version returns version based on commit and tag history of the Git project
Version:    {{{ git_dir_version }}}

# This can be useful later for adding downstream patches
Release:    1%{?dist}

# Basic description of the package
Summary: Authoritative DNS server for A/AAAA container records

# License. We assume GPLv2+ here.
License:   ASL 2.0 and BSD and ISC and MIT

# Home page of the project. Can also point to the public Git repository page.
URL:        https://github.com/containers/aardvark-dns

# Detailed information about the source Git repository and the source commit
# for the created rpm package
VCS:        {{{ git_dir_vcs }}}

# git_dir_pack macro places the repository content (the source files) into a tarball
# and returns its filename. The tarball will be used to build the rpm.
Source:     {{{ git_dir_pack }}}

BuildRequires: cargo
BuildRequires: git-core
BuildRequires: make
ExclusiveArch:  %{rust_arches}

%global _description %{expand:
%{summary}}

%description %{_description}

# The following four sections already describe the rpm build process itself.
# prep will extract the tarball defined as Source above and descend into it.
%prep
#{{{ git_dir_setup_macro }}}
%autosetup -Sgit -T -b 0 -n %{name}

# This will invoke `make` command in the directory with the extracted sources.
%build
%{__make} build

# This will copy the files generated by the `make` command above into
# the installable rpm package.
%install
%{__make} DESTDIR=%{buildroot} PREFIX=%{_prefix} install

# This lists all the files that are included in the rpm package and that
# are going to be installed into target system where the rpm is installed.
%files
%license LICENSE
%dir %{_libexecdir}/podman
%{_libexecdir}/podman/%{name}

# Finally, changes from the latest release of your application are generated from
# your project's Git history. It will be empty until you make first annotated Git tag.
%changelog
{{{ git_dir_changelog }}}
